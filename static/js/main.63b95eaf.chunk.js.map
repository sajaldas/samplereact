{"version":3,"sources":["assets/logo.svg","components/Header.js","components/Footer.js","components/Home.js","components/User.js","redux/actions/user-actions.js","redux/reducers/user-reducer.js","redux/actions/todo-actions.js","redux/reducers/todo-reducer.js","redux/actions/signup-actions.js","redux/reducers/signup-reducer.js","redux/store/configureStore.js","components/Users.js","components/Todo.js","components/Signup.js","components/SignupAuth.js","components/Container.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","src","logo","alt","react_router_dom","to","Component","Footer","Home","User","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","loginId","data","login","img","avatar_url","_this2","onClick","onLikePress","votes","up","down","onDislikePress","UP_VOTE","DOWN_VOTE","actionTypes","updateUpVote","payload","type","updateDownVote","initialState","electedUsers","saveUserUpvote","electedusers","id","length","index","_","findIndex","item","concat","toConsumableArray","slice","objectSpread","saveUserDownvote","ADD_TO_LIST","DELETE_FROM_LIST","UPDATE_STATUS_DONE","UPDATE_STATUS_NOTDONE","addTolist","deleteFromList","updateToDoStatusDone","updateToDoStatusNotDone","todoList","updateToDoList","toDos","delItem","status","done","UPDATE_USER","updateLoggedInUser","console","log","user","allReducers","combineReducers","users","arguments","undefined","action","todos","name","filter","loggedUser","confirmationMiddleware","store","next","doConfirm","window","confirm","configureStore","createStore","applyMiddleware","axios","require","Users","storeUpdated","setState","getState","handleLikePress","uid","handleDislikePress","renderGitProfiles","user_data","forEach","push","components_User","key","getUservotes","get","then","response","userVotes","find","connect","dispatch","bindActionCreators","Todo","handleInput","e","inputText","target","value","inputValue","handleAddToList","itemId","self","assertThisInitialized","setTimeout","filterList","filterType","filterApplied","newlist","toDoList","handleCheckBox","is_chk","removeItem","renderToDoList","items","map","onChange","checked","aria-hidden","_this3","event","renderToDos","CLIENT_ID","OAUTH2_ENDPOINT","REDIRECT_URL","Signup","fieldType","emailInputText","emailInputValue","passInputText","passInputValue","handleLoginButtonClick","handleGoogleSignup","login_url","encodeURI","location","href","googleUser","profile","getBasicProfile","sessionStorage","setItem","getId","getName","getImageUrl","getEmail","SignupAuth","hash","access_code","split","authStr","headers","Authorization","catch","error","Container","react_router","exact","path","component","App","es","components_Header","components_Container","components_Footer","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.63b95eaf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport logo from '../assets/logo.svg'\r\n\r\nclass Header extends Component{\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"header\">\r\n                <div className=\"logo\">\r\n                    <img src={logo} alt=\"logo\" />\r\n                </div>\r\n                <nav className=\"menu\">\r\n                    <ul>\r\n                        <li><Link to=\"/\">Home</Link></li>\r\n                        <li><Link to=\"/users\">Users</Link></li>\r\n                        <li><Link to=\"/todo\">Todo List</Link></li>\r\n                        <li><Link to=\"/signup\">Signup</Link></li>\r\n                    </ul>\r\n                </nav>                \r\n                <div className=\"clear\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"footer\">\r\n                Copyright 2019 @ React js\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\n\r\nclass Home extends Component {\r\n\r\n    // constructor(props) {\r\n    //     super(props)\r\n    //     this.state = {            \r\n    //     }\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"innercontent\">\r\n                <h1>Home Page</h1>\r\n                <div className=\"prodcontainer\">\r\n                    <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.</p>\r\n                    <p>It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nclass User extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            //id: this.props.data.id,\r\n            loginId: this.props.data.login,\r\n            img: this.props.data.avatar_url\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        //console.log('votes = ', this.props.votes)\r\n        return (\r\n            <div className=\"user-item\">\r\n                <div className=\"wrap\">\r\n                    <div className=\"userimg\">\r\n                        <img src={this.state.img} alt={this.state.loginId} />\r\n                    </div>\r\n                    <div className=\"usertitle\">{this.state.loginId}</div>\r\n                    <ul className=\"vote\">\r\n                        <li className=\"like\">\r\n                            <div className=\"innerbtn\">\r\n                                <i className=\"fal fa-thumbs-up\" onClick={() => this.props.onLikePress()}></i>\r\n                                <span>{(this.props.votes) ? this.props.votes.up : 0}</span>\r\n                            </div>\r\n                        </li>                        \r\n                        <li className=\"dislike\">\r\n                            <div className=\"innerbtn\">\r\n                                <span>{(this.props.votes) ? this.props.votes.down : 0}</span>\r\n                                <i className=\"fal fa-thumbs-down\" onClick={() => this.props.onDislikePress()}></i>\r\n                            </div>\r\n                            \r\n                        </li>\r\n                    </ul>\r\n                    {/* {this.renderButton()} */}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default User;","const UP_VOTE = \"up_vote\";\r\nconst DOWN_VOTE = \"down_vote\";\r\n\r\nexport const actionTypes = {\r\n  UP_VOTE,\r\n  DOWN_VOTE\r\n}\r\n\r\nexport function updateUpVote(payload) {\r\n  return {\r\n      type: UP_VOTE,\r\n      payload: payload\r\n  }\r\n}\r\n\r\nexport function updateDownVote(payload) {\r\n  return {\r\n      type: DOWN_VOTE,\r\n      payload: payload\r\n  }\r\n}\r\n\r\nexport default {\r\n  updateUpVote,\r\n  updateDownVote\r\n}","import { actionTypes } from \"../actions/user-actions\";\r\nimport _ from 'lodash'\r\n\r\nconst initialState = {\r\n  electedUsers: []\r\n}\r\n\r\nconst saveUserUpvote = (electedusers, id) =>{  \r\n  if(!electedusers.length)\r\n  return [{id: id, up: 1, down: 0}]\r\n  else\r\n  {\r\n    const index = _.findIndex(electedusers, (item) => item.id===id)    \r\n    if(index<0)\r\n    return [...electedusers, {id: id, up: 1, down: 0}]\r\n    else{      \r\n      return [\r\n        ...electedusers.slice(0, index),\r\n        {...electedusers[index], up: electedusers[index].up+1},        \r\n        ...electedusers.slice(index+1)\r\n      ]\r\n    }\r\n  }\r\n}\r\n\r\nconst saveUserDownvote = (electedusers, id) =>{  \r\n  if(!electedusers.length)\r\n  return [{id: id, up: 0, down: 1}]\r\n  else\r\n  {\r\n    const index = _.findIndex(electedusers, (item) => item.id===id)    \r\n    if(index<0)\r\n    return [...electedusers, {id: id, up: 0, down: 1}]\r\n    else{      \r\n      return [\r\n        ...electedusers.slice(0, index),\r\n        {...electedusers[index], down: electedusers[index].down+1},        \r\n        ...electedusers.slice(index+1)\r\n      ]\r\n    }\r\n  }\r\n}\r\n\r\nexport default function usersReducer(state = initialState, action) {\r\n  //console.log('state = ', state, 'action = ', action)  \r\n  let { type, payload } = action;\r\n  switch (type) {\r\n    case actionTypes.UP_VOTE:      \r\n    let newStateUp = { ...state,  electedUsers: saveUserUpvote(state.electedUsers, payload.id) }\r\n      //console.log('newState = ', newState)\r\n      return newStateUp\r\n    case actionTypes.DOWN_VOTE:\r\n      let newStateDown = { ...state,  electedUsers: saveUserDownvote(state.electedUsers, payload.id) }\r\n      //console.log('newState = ', newState)\r\n      return newStateDown\r\n    default:\r\n      return state\r\n  }\r\n}","const ADD_TO_LIST = \"add_to_list\";\r\nconst DELETE_FROM_LIST = \"delete_from_list\";\r\nconst UPDATE_STATUS_DONE = \"update_status_done\";\r\nconst UPDATE_STATUS_NOTDONE = \"update_status_notdone\";\r\n\r\n\r\nexport const actionTypes = {\r\n  ADD_TO_LIST,\r\n  DELETE_FROM_LIST,\r\n  UPDATE_STATUS_DONE,\r\n  UPDATE_STATUS_NOTDONE\r\n}\r\n\r\nexport function addTolist(payload) {\r\n  //console.log('payload = ', payload)\r\n  return {\r\n      type: ADD_TO_LIST,\r\n      payload: payload\r\n  }\r\n}\r\n\r\nexport function deleteFromList(payload) {\r\n  return {\r\n      type: DELETE_FROM_LIST,\r\n      payload: payload\r\n  }\r\n}\r\n\r\nexport function updateToDoStatusDone(payload) {\r\n  return {\r\n      type: UPDATE_STATUS_DONE,\r\n      payload: payload\r\n  }\r\n}\r\n\r\nexport function updateToDoStatusNotDone(payload) {\r\n  return {\r\n      type: UPDATE_STATUS_NOTDONE,\r\n      payload: payload\r\n  }\r\n}\r\n\r\nexport default {\r\n  addTolist,\r\n  deleteFromList,\r\n  updateToDoStatusDone,\r\n  updateToDoStatusNotDone\r\n}","import { actionTypes } from \"../actions/todo-actions\";\r\nimport _ from 'lodash'\r\n\r\nconst initialState = {\r\n  todoList: []\r\n}\r\n\r\nconst updateToDoList = (toDos, delItem, status) => {\r\n  const index = _.findIndex(toDos, (item) => item.id === delItem)\r\n  return [\r\n    ...toDos.slice(0, index),\r\n    { ...toDos[index], done: status },\r\n    ...toDos.slice(index + 1)\r\n  ]\r\n}\r\n\r\nexport default function todoReducer(state = initialState, action) {\r\n  //console.log('state = ', state, 'action = ', action)  \r\n  let { type, payload } = action;\r\n  let newState;\r\n  switch (type) {\r\n    case actionTypes.ADD_TO_LIST:\r\n      newState = { ...state, todoList: [...state.todoList, { id: payload.id, name: payload.name, done: false }] }\r\n      //console.log('newState = ', newState)\r\n      return newState\r\n    case actionTypes.UPDATE_STATUS_DONE:\r\n      newState = { ...state, todoList: updateToDoList(state.todoList, payload.id, true) }\r\n      return newState\r\n    case actionTypes.UPDATE_STATUS_NOTDONE:\r\n      newState = { ...state, todoList: updateToDoList(state.todoList, payload.id, false) }\r\n      return newState\r\n    case actionTypes.DELETE_FROM_LIST:      \r\n      newState = { ...state, todoList: _.filter(state.todoList, function(item) { return item.id!==payload.id; }) }            \r\n      return newState\r\n    default:\r\n      return state\r\n  }\r\n}","const UPDATE_USER = \"update_user\";\r\n\r\nexport const actionTypes = {\r\n    UPDATE_USER\r\n  }\r\n\r\n  export function updateLoggedInUser(payload) {\r\n    console.log('payload = ', payload)\r\n    return {\r\n        type: UPDATE_USER,\r\n        payload: payload\r\n    }\r\n  }\r\n\r\n  export default {\r\n    updateLoggedInUser,    \r\n  }","import { actionTypes } from \"../actions/signup-actions\";\r\n//import _ from 'lodash'\r\n\r\nconst initialState = {\r\n    user: {}\r\n}\r\n\r\nexport default function signupReducer(state = initialState, action) {\r\n  //console.log('state = ', state, 'action = ', action)  \r\n  let { type, payload } = action;\r\n  let newState;\r\n  switch (type) {\r\n    case actionTypes.UPDATE_USER:\r\n      //console.log('payload = ', payload);\r\n      newState = { ...state, user: payload }\r\n      //console.log('newState = ', newState)\r\n      return newState\r\n    default:\r\n      return state\r\n  }\r\n}","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\n\r\nimport usersReducer from '../reducers/user-reducer'\r\nimport todoReducer from '../reducers/todo-reducer'\r\nimport signupReducer from '../reducers/signup-reducer'\r\n\r\nconst allReducers = combineReducers({\r\n  users: usersReducer,\r\n  todos: todoReducer,\r\n  loggedUser: signupReducer\r\n})\r\n\r\nconst confirmationMiddleware = store => next => action => {\r\n  //console.log('action = ', action)\r\n  if(action.payload.doConfirm)\r\n  {\r\n    if(window.confirm('Are you sure ?'))\r\n    next(action)  \r\n  }\r\n  else\r\n  next(action)\r\n}\r\n\r\nexport default function configureStore() {    \r\n    const store = createStore(\r\n        allReducers,\r\n        applyMiddleware(confirmationMiddleware)      \r\n    );    \r\n    return store;\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport {bindActionCreators} from 'redux'\r\nimport _ from 'lodash'\r\n\r\nimport User from './User'\r\nimport configureStore from \"../redux/store/configureStore\";\r\nimport {updateUpVote, updateDownVote} from '../redux/actions/user-actions'\r\n\r\nconst store = configureStore()\r\n\r\nconst axios = require('axios');\r\n\r\nclass Users extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            users: [],\r\n            electedUsers: []\r\n        }\r\n    }\r\n\r\n    storeUpdated = () =>{\r\n      console.log('subscribed to store');\r\n      //console.log('store users = ', store.getState().users)\r\n      this.setState({\r\n        electedUsers: store.getState().users.electedUsers\r\n      })\r\n    }\r\n\r\n    componentDidMount() {\r\n      console.log('hi');\r\n        let url = 'https://api.github.com/users'\r\n        //fetch(url).then(response => response.json()).then(data => console.log(data));\r\n        axios.get(url).then(response => {\r\n          console.log('response = ', response);\r\n          this.setState({\r\n            users: response.data\r\n          })\r\n        });\r\n    }\r\n\r\n    handleLikePress = (uid) =>{\r\n      //console.log('onLikePress')      \r\n      const payload={\r\n        id: uid        \r\n      }      \r\n      this.props.updateUpVote(payload)      \r\n    }\r\n\r\n    handleDislikePress = (uid) =>{\r\n      //console.log('onDislikePress')\r\n      const payload={\r\n        id: uid        \r\n      }\r\n      this.props.updateDownVote(payload)      \r\n    }\r\n\r\n    getUservotes (uid) {      \r\n      if(this.props.electedUsers)\r\n      {\r\n        let userVotes=this.props.electedUsers;        \r\n        return _.find(userVotes, (item) => item.id===uid)      \r\n      }\r\n      return\r\n    }\r\n\r\n    renderGitProfiles = () => {\r\n        let users = this.state.users;\r\n        //console.log('state = ', this.state);\r\n        let user_data = [];\r\n        if (users.length) {\r\n          users.forEach((user) => {\r\n            user_data.push(<User data={user} key={user.id} \r\n              onLikePress={() => this.handleLikePress(user.id)} \r\n              onDislikePress={() => this.handleDislikePress(user.id)}\r\n              votes={this.getUservotes(user.id)} />);\r\n          })\r\n        }\r\n        return user_data;\r\n    }\r\n\r\n    render() {\r\n      //console.log('app Props state = ', this.props.electedUsers);\r\n        return (\r\n            <div className=\"innercontent\">\r\n                <h1>Git Profiles Page</h1>\r\n                <div className=\"usercontainer\">{this.renderGitProfiles()}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log('new state = ', state);\r\n  return {\r\n    electedUsers: state.users.electedUsers\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {  \r\n  return bindActionCreators({\r\n    updateUpVote: updateUpVote,\r\n    updateDownVote: updateDownVote\r\n  }, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { addTolist, updateToDoStatusDone, updateToDoStatusNotDone, deleteFromList } from '../redux/actions/todo-actions'\r\n\r\n\r\nclass Todo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            inputText: '',\r\n            inputValue: '',\r\n            filterApplied: false,\r\n            filterType: 'all',\r\n            itemId: 0,\r\n            toDoList: []\r\n        }        \r\n    }    \r\n\r\n    handleInput = (e) => {\r\n        //console.log('val = ', e.target.value)\r\n        this.setState({ inputText: e.target.value })\r\n        this.setState({ inputValue: e.target.value })\r\n    }\r\n\r\n    handleAddToList = () => {\r\n        if(!!this.state.inputText)\r\n        {\r\n            let id = this.state.itemId;\r\n            id++;\r\n            this.setState({ itemId: id })\r\n            //console.log('text = ', this.state.inputText);        \r\n            this.props.addTolist({ name: this.state.inputText, id: id })            \r\n            this.setState({ inputValue: '' })\r\n            this.setState({ inputText: '' }) \r\n            let self = this;\r\n            setTimeout(function(){                \r\n                self.filterList(self.state.filterType)\r\n            }, 100)\r\n        }\r\n    }\r\n\r\n    filterList = (type) => {            \r\n        this.setState({filterType: type})\r\n        if(type==='all')\r\n            this.setState({filterApplied: false})                        \r\n        else {\r\n            let filter = (type==='complete') ? true : false;\r\n            var newlist = this.props.todos.filter(function (item) {\r\n                return item.done === filter;\r\n            });                    \r\n            //console.log('filtered list = ', newlist);\r\n            this.setState({toDoList: newlist})            \r\n            this.setState({filterApplied: true})\r\n        }                        \r\n    }\r\n\r\n    renderToDos() {        \r\n        return (            \r\n            <div>\r\n                <div className=\"tablinks\">\r\n                    <span onClick={() => this.filterList('all')} className={(this.state.filterType==='all') ? 'active' : ''}>All</span>\r\n                    <span onClick={() => this.filterList('pending')} className={(this.state.filterType==='pending') ? 'active' : ''}>Pending</span>\r\n                    <span onClick={() => this.filterList('complete')} className={(this.state.filterType==='complete') ? 'active' : ''}>Completed</span>\r\n                </div>\r\n                <div className=\"listbox\">\r\n                    <ul>{this.renderToDoList()}</ul>                    \r\n                </div>\r\n            </div>\r\n        )        \r\n    }\r\n\r\n    handleCheckBox = (is_chk, id) => {\r\n        //console.log('chk = ', is_chk);\r\n        if(is_chk)\r\n        this.props.updateToDoStatusDone({id: id})\r\n        else\r\n        this.props.updateToDoStatusNotDone({id: id})\r\n        //console.log('this.props = ', this.props)\r\n        this.filterList(this.state.filterType)\r\n    }\r\n\r\n    removeItem = (id) => {        \r\n        this.props.deleteFromList({id: id, doConfirm: true})\r\n    }\r\n\r\n    renderToDoList = () => {\r\n        //let items = this.props.todos;\r\n        let items;\r\n        if(this.state.filterApplied===false)\r\n        items = this.props.todos;\r\n        else if(this.state.filterApplied===true)\r\n        items = this.state.toDoList;\r\n        \r\n        if (items.length) {        \r\n            return items.map((item) => {\r\n                return (\r\n                    <li key={item.id}><label><input type=\"checkbox\" onChange={(e) => this.handleCheckBox(e.target.checked, item.id)} \r\n                    checked={(item.done) ? \"checked\" : \"\" } /> \r\n                    <span>{item.name}</span></label>\r\n                    <i className=\"fa fa-trash list-rm\" aria-hidden=\"true\" onClick={() => this.removeItem(item.id)}></i>\r\n                    </li>\r\n                )\r\n            })\r\n        }\r\n        else            \r\n        return (<li><label> <span>No Items</span></label></li>)        \r\n        \r\n    }\r\n\r\n    render() {        \r\n        return (\r\n            <div className=\"innercontent\">\r\n                <h1>Todo List Page</h1>\r\n                <div className=\"prodcontainer\">\r\n                    <div className=\"todocontainer\">\r\n                        <div className=\"formbox\">\r\n                            <input type=\"text\" onChange={(event) => this.handleInput(event)} value={this.state.inputValue} />\r\n                            <button className=\"btn btn-primary\" onClick={this.handleAddToList}>Add</button>\r\n                        </div>\r\n                        {this.renderToDos()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    //console.log('new state = ', state);\r\n    return {\r\n        todos: state.todos.todoList\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        addTolist: addTolist,\r\n        updateToDoStatusDone: updateToDoStatusDone,\r\n        updateToDoStatusNotDone: updateToDoStatusNotDone,\r\n        deleteFromList: deleteFromList\r\n    }, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Todo);\r\n\r\n","import React, { Component } from 'react';\r\n// import { connect } from 'react-redux'\r\n// import { bindActionCreators } from 'redux'\r\n// import { addTolist, updateToDoStatusDone, updateToDoStatusNotDone, deleteFromList } from '../redux/actions/todo-actions'\r\n\r\n\r\nconst CLIENT_ID = '566747368285-nutel28dapl8063tchef5pnbmfmngslk.apps.googleusercontent.com'\r\n//const SECRET = 'pn2mTRdDNvXa-TDA8cosyOQ4'\r\nconst OAUTH2_ENDPOINT = 'https://accounts.google.com/o/oauth2/v2/auth';\r\nconst REDIRECT_URL = 'http://localhost:3000/authenticate'\r\n\r\nclass Signup extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            emailInputText: '',\r\n            emailInputValue: '',\r\n            passInputText: '',\r\n            passInputValue: '',            \r\n        }        \r\n    }\r\n\r\n    componentWillReceiveProps(){\r\n        // window.gapi.signin2.render('g-signin2', {\r\n        //     'scope': 'https://www.googleapis.com/auth/plus.login',\r\n        //     'width': 200,\r\n        //     'height': 50,\r\n        //     'longtitle': true,\r\n        //     'theme': 'dark',\r\n        //     'onsuccess': this.onSignIn\r\n        // })        \r\n    }\r\n\r\n    onSignIn(googleUser) {\r\n        let profile = googleUser.getBasicProfile();        \r\n\t\tsessionStorage.setItem('authToken', profile.getId());\r\n\t\tsessionStorage.setItem('name', profile.getName());\r\n\t\tsessionStorage.setItem('imageUrl', profile.getImageUrl());\r\n\t\tsessionStorage.setItem('email', profile.getEmail());\r\n\r\n        console.log('id = ', profile.getId())\r\n        console.log('name = ', profile.getName())\r\n        console.log('photo = ', profile.getImageUrl())\r\n        console.log('email = ', profile.getEmail())\r\n\r\n\t\t// let account = this.props.cursor.refine('account');\r\n\t\t// account.refine('authToken').set(sessionStorage.getItem('authToken'));\r\n\t\t// account.refine('name').set(sessionStorage.getItem('name'));\r\n\t\t// account.refine('imageUrl').set(sessionStorage.getItem('imageUrl'));\r\n\t\t// account.refine('email').set(sessionStorage.getItem('email'));\r\n\t}\r\n    \r\n    handleInput = (e, fieldType) => {\r\n        //console.log('val = ', e.target.value)\r\n        if(fieldType==='email')\r\n        {\r\n            this.setState({ emailInputText: e.target.value })\r\n            this.setState({ emailInputValue: e.target.value })\r\n        }\r\n        else{\r\n            this.setState({ passInputText: e.target.value })\r\n            this.setState({ passInputValue: e.target.value })\r\n        }        \r\n    }\r\n\r\n    handleLoginButtonClick = () => {        \r\n        // let email  = this.state.emailInputValue\r\n        // let pass  = this.state.passInputValue\r\n        // console.log('email = ', email)\r\n        // console.log('pass = ', pass)        \r\n    }\r\n\r\n    handleGoogleSignup = () => {\r\n        let login_url = OAUTH2_ENDPOINT+'?scope=' +\r\n        encodeURI('https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email') +\r\n        '&redirect_uri=' + encodeURI(REDIRECT_URL) +\r\n        '&response_type=token&client_id=' + CLIENT_ID + '&access_type=online&prompt=consent';\r\n        //console.log('login_url = ', login_url)\r\n        window.location.href=login_url; \r\n    }\r\n    \r\n    render() {        \r\n        return (\r\n            <div className=\"innercontent\">                \r\n                <h1>Signup Page</h1>\r\n                <div className=\"prodcontainer\">\r\n                    <div className=\"todocontainer\">\r\n                        <div className=\"formbox login\">\r\n                            {/* <div className=\"row\">\r\n                                <label>Login Id:</label><input type=\"text\" id=\"email\" onChange={(event) => this.handleInput(event, 'email')} value={this.state.inputValue} />\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <label>Password:</label><input type=\"text\" id=\"pass\" onChange={(event) => this.handleInput(event, 'pass')} value={this.state.inputValue} />\r\n                            </div>                            \r\n                            <div className=\"row\" id=\"g-signin2\"></div>\r\n                            <div className=\"row\"><button className=\"btn btn-primary\" id=\"g-signin2\" onClick={this.handleLoginButtonClick}>Login</button></div> */}\r\n                            <div className=\"row\"><button className=\"btn btn-primary\" id=\"g-signin2\" onClick={this.handleGoogleSignup}>Signup with Google</button></div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n//     //console.log('new state = ', state);\r\n//     return {\r\n//         todos: state.todos.todoList\r\n//     }\r\n// }\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//     return bindActionCreators({\r\n//         addTolist: addTolist,\r\n//         updateToDoStatusDone: updateToDoStatusDone,\r\n//         updateToDoStatusNotDone: updateToDoStatusNotDone,\r\n//         deleteFromList: deleteFromList\r\n//     }, dispatch)\r\n// }\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Signup);\r\n\r\nexport default Signup;\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { updateLoggedInUser } from '../redux/actions/signup-actions'\r\n\r\nconst USERINFO_URL = 'https://www.googleapis.com/oauth2/v3/userinfo'\r\n\r\nconst axios = require('axios');\r\n\r\nclass SignupAuth extends Component {\r\n\r\n    componentDidMount(){        \r\n        if(this.props.location.hash!=='')\r\n        {\r\n            let hash = this.props.location.hash.split('#access_token=')\r\n            let spl = hash[1].split('&')\r\n            let access_code = spl[0]\r\n            //console.log('access_code = ', access_code);\r\n            \r\n            const authStr = 'Bearer '.concat(access_code); \r\n            axios.get(USERINFO_URL, { headers: { Authorization: authStr }})\r\n            .then(response => {\r\n                //console.log('response = ', response);\r\n                if(response.data){                                        \r\n                    this.props.updateLoggedInUser(response.data)\r\n                }\r\n            })\r\n            .catch(error => {\r\n                if(error.response)\r\n                console.log('error = ', error.response.data.error)\r\n            });\r\n        }        \r\n    }\r\n    \r\n    render() {        \r\n        return (\r\n            <div className=\"innercontent\">                \r\n                <h1>Validating user ...</h1>\r\n                <div className=\"prodcontainer\">\r\n                    {/* <div className=\"todocontainer\">\r\n                        <div className=\"formbox login\">\r\n                            \r\n                        </div>                        \r\n                    </div> */}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log('new state = ', state);\r\n    return {\r\n        //todos: state.todos.todoList\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        updateLoggedInUser: updateLoggedInUser,        \r\n    }, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignupAuth);\r\n\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Home from './Home';\r\nimport Users from './Users';\r\nimport Todo from './Todo';\r\nimport Signup from './Signup';\r\nimport SignupAuth from './SignupAuth';\r\n\r\nclass Container extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={Home} />\r\n                    <Route exact path=\"/users\" component={Users} />\r\n                    <Route exact path=\"/todo\" component={Todo} />\r\n                    <Route exact path=\"/signup\" component={Signup} />\r\n                    <Route exact path=\"/authenticate\" component={SignupAuth} />\r\n                </Switch>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Container;","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport './App.css';\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Container from './components/Container'\nimport configureStore from \"./redux/store/configureStore\";\nimport { Provider } from 'react-redux'\n\nconst store = configureStore()\n\nfunction App() {\n  return (\n    <Provider store={store}>\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <Container />\n        <Footer />\n      </Router>\n    </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}